[build-system]
# Using git source is only needed because the package is not published
# It also means that if will not use the local code of hatch-openapi-version but the head on the remote
requires = ["hatchling", "hatch-openapi-version @git+https://github.com/webscit/hatch-demo.git@main#subdirectory=hatch-openapi-version"]
build-backend = "hatchling.build"

[project]
name = "hatch-demo"
dynamic = ["version", "authors", "description", "license"]
readme = "README.md"
requires-python = ">=3.8"
keywords = []
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "connexion~=3.0",
  "pydantic~=2.0",
  "uvicorn"
]

[project.optional-dependencies]
dev = [
  "pyyaml~=6.0",
  "hatchling>=0.21.0",
  "ruff",
]

[project.urls]
Documentation = "https://github.com/webscit/hatch-demo#readme"
Issues = "https://github.com/webscit/hatch-demo/issues"
Source = "https://github.com/webscit/hatch-demo"

[tool.hatch.build.targets.sdist]
exclude = [ "hatch-openapi-version" ]

[tool.hatch.build.targets.wheel]
artifacts = [ "src/hatch_demo/openapi_client" ]

[tool.hatch.version]
source = "openapi"
path = "src/hatch_demo/spec/openapi.yaml"

[tool.hatch.build.hooks.version]
path = "src/hatch_demo/_version.py"
template = """
# This file is auto-generated by Hatchling. As such, do not:
#   - modify
#   - track in version control e.g. be sure to add to .gitignore
__version__ = '{version}'"""

[tool.hatch.metadata.hooks.custom]

[tool.hatch.build.hooks.custom]
